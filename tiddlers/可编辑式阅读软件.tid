created: 20240404042819091
creator: 马不前
long-text-toc: yes
modified: 20240520090550323
modifier: 马不前
tags: 想要的软件与游戏
title: 可编辑式阅读软件

! 提出背景

经常看论文或者学术类的文章，会发现通常一个段落一两千字，甚至更长。我就很好奇为什么不多分一些段落呢？多分一些段落会影响表达吗？多分一些段落会占更多的版面，可能会造成纸张过多。这也许是一个原因。但在电子形式下，完成可以忽略不计。

但很长的段落在阅读时，却会造成阅读的忽略。就看着看着，就忘了前面是什么内容了。再重新去读，又发现更前面的内容还是没看懂。从而导致就是看完了，但什么也没看一样。而反复阅读的痛苦，又让人不想再打开这本书。

另一种情况则是现在互联网盛行，很多人也会在平台上或者博客上写文章。这类文章通常不会大段大段的内容。但通常会因为写得太随意了，读起来很快，隐藏的逻辑错误可能就没发现。这并非是作者有意为之，更多是随便写了。

上述问题都可以在一边阅读一边编辑时解决。编辑最简单的就是可以分行。而在可以分行下，长文章或大段内容就能得到消解。随意的文章也能得到细致的分析。

第三个方面则是可以在中断阅读中，继续自己的思考。我经常会有阅读时，作者的逻辑太强大了，一边看一边跟着作者的逻辑走。等看完了又没有再继续回顾，然后就只记得作者的逻辑了，但实际上也可以有另外一种逻辑，或者说文本中激发了你的其他感受，其他思考。而通过一边编辑一边阅读，就能有更多的时间延续下去。因为你是在编辑，在写，在处理一本书籍。而从这个方面也可以引申到外语阅读。当然外语阅读中的泛读很重要，但精读却是更为重要的。

! 现实情况

那么现实中有没有能够实现上面期待的软件呢？我简单分析了下面几类情况，从分析上来看，是没有实现这些功能的。

!! 阅读类软件

先看普遍的阅读软件情况吧。普遍的阅读软件都会带有批注的功能。你可以选中一部分文本，再写下批注。也可以直接在这章节中写下批注。但我并不满意这种方式。因为不能分行。其次是批注也不够明显。只能成为一个记号。下次再打开时还需要点击这个记号。当然也有个好处是，可以导出这些批注。

!! 手写类软件

在ipad或者其他平板上，有的电脑屏幕也支持手写。但我也是反对手写的。我自己有一个ipad，上面大部分手写笔记软件我都买了，而且也用过两年时间，但我发现我几乎不会看之前整理的笔记，尽管有些笔记整理得非常好。我也不清楚是为什么。而手写另一个缺点是，要么是pdf格式保存，要么以图片形式保存，再不就是和这个软件绑定。而这都让笔记无法更好保存下去。其他人看手写笔记还不一定能看得懂字迹，我自己也经常看不懂之前写的内容，字迹太潦草了。要把字迹再转换，又需要花时间精力。所以我现在基本上放弃了在ipad上记手写笔记。

!! 文档类软件

文档类软件以处理word或者pdf两种格式为代表。下面也分开阐述。

!!! pdf类

这是最常见的文件格式。而pdf通常可以分成两类，一类是文字版本的，可以直接复制。这一类体积小，转换成word也比较方便。目前我使用的结果就是直接把pdf文件转换成word，再到word里编辑。而另一类影印版本的，则需要经过OCR处理。而多了这一层处理，会受原pdf影印效果，导致OCR之后也可能不太好。转换成word就相当困难了。通常会用专业的pdf编辑器进行编辑。但这些又可能需要付费。

另一方面是，像论文或者期刊文章，大部分是双排版的，也会导致转换出问题。

!!! word类

一般是转换成word之后再进行编辑的。我通常会把之前的文本换成楷体。而自己写的笔记内容，则改成宋体。但实话说，还是不够方便。不过word算是最实用的了。可以各种调整。但就是整体上来说，无法进一步整体出来。

!! 特殊类软件

有一些特殊的软件能够部分实现其中的功能。细分的话，有下面几类。

!!! supermemo

在这里简称为sm，sm可以导入转换后的epub书籍，或者网页内容，进行编辑。但这种编辑是非常简陋的，很难实现丰富的编辑需求。

!!! tiddlywiki

tiddlywiki也可以导入转换后的epub书籍，使用tidme插件里的read插件进行渐进阅读。本来还可以结合所见即所得插件实现，但tidme插件拆分出来的，并不能直接编辑，而且条目标题也是以`$:/`开头的，会被识别成系统条目。实际上也确实是系统条目，因为转换后的twpub格式，就是以插件分发的。而这依赖于tiddlywiki的影子条目机制。但这样的话，就使用不了所见即所得插件。而所见即所得插件还有一些bug需要修复。再一个是tiddlywiki的性能也支撑不了多本书籍。总不可能一本书籍一个wiki，不太现实。

!!! obsidian或vs code

obsidian得利于markdown生态的发展，其自身插件也非常丰富。vs code也是同理。这主要是把epub书籍转换成md格式，然后进行可编辑式阅读。这可能是最可行的方案。但目前多数epub书籍转md转换得不够干净。还缺少特殊的处理，导致转换后与直接从文本上复制区别不大。对于epub里各种各样的代码来说，还算是挺困难的。

! 开发理念

从本质上来说，目前的电子书籍仍旧是在模仿纸质书籍。尽管电子书籍比纸质书籍有诸多优势，但还不够。还没有充分发挥电子书籍的优势。我以为我们在阅读过程中，实际上就是在破坏文本。我们把文本破坏成我们想要的样子，我们可以理解的样子。这个过程可以比喻成我们在咀嚼文本。通过不断分段，我们更加细致了解到一个文本应该是怎样安排的。我们可以从不同程度去咀嚼，去思考。

所以理想状态下，应该是把原文本看作是游戏里的基础文件。再把破坏的过程，看成是玩家或读者的创造过程。同时读者可以像玩家一样，不断开新档，不断从头开始体验。而我相信，只有经受住多次从头开始体验的作品，才是真正伟大的作品和值得阅读的作品。

! 开发难度

就开发难度来说，应该算是比较困难的。首先是要处理epub书籍。把html转换成其他形式。其中的图片和注释如何处理是需要思考的。有些古籍还因为特殊的字词是用图片来展示的。这些都需要想办法统一处理。也要从epub书籍中提取目录。因为有了目录通常能更好帮助理解文本。

其次就是如何保证可以进行多次的编辑。即我们需要多次进入一个熟悉的开头里去。类似游戏不同档一样。想像一下，一本书实际上就可以看作是一个游戏。

再次如何实现可视化编辑，像所见即所得一样。这里可以搞一排工具栏，用来实现各种按钮。当然如果能做到像vscode那样，直接用键盘处理也是更好的。

最终如何提取出这些笔记呢？应该以何种形式保存呢？最好还要做一个可以导出数据的功能。我希望这是一个纯本地离线使用的软件。因为只有这样才能真正实现。

而很明显不会支持移动端。另一方面是我们可以同时接入fsrs进行制卡和间隔重复。这样就相当于一边理解，一边制卡了。

可以想像这是一个大型软件。但我期待有人能真正开发出来。把每一本书都当成一个游戏去反复体验吧，你能获得更多的。

悲伤的是，现在我的阅读变得混乱起来。一方面我渴望有这样一款软件来满足我可编辑的需求，但另一方面还没有这样的软件。导致我在浏览网页，看其他人的博客时，都觉得不自在，少了什么一样。

! RSS

老实说，我并不清楚RSS是什么，现在也只是随便说一下。因为我看到这个东西好像是能够把其他人写的博客聚合起来。如果我们能看到聚合后的内容，那么我们应该也能去编辑。

其他内容请查看[[可编辑式阅读软件-开发构想]]