created: 20250430131229990
creator: 马不前
modified: 20250502070405188
modifier: 马不前
tags: cluster-chapter
title: cluster-chapter-readme

! 模仿[[cluster-aggregation]]，创建了一个chapter模式

对拥有字段`cluster`且值为`chapter`，`section`和`node`的，表示不同的模板。处理方式的区别在于，chapter是直接呈现，section则是构建一系列条目列表，点击展示一个弹窗，node（这个名称可能有点不太好，但看后面情况来使用或更改），则是分成几列。这一章下面有几个section，就有几列，然后每一列下面都有node的列表，同样点击后展示成弹窗，或者其他风格。

!! 内容

目前可以设置的几个模块，`note`，表示这本书的笔记，`copy`，表示复制的内容，`summary`，表示摘要，通常是一个章节的摘要，但可以细分处理，`card`，表示书籍制的卡片。

这种操作处理方式会增加大量的字段，虽然有模板化编辑，但仍旧需要一定的时间。那为什么要这样做呢？我以为这就像JS和TS，js是一个动态类型语言，所以对变量类型几乎不做任何处理。而ts是一个增加js的静态类型语言，做了很多的处理，特别是class类的语言类型控制。和很多人的感受不一样，我觉得ts这种静态类型的处理是非常好的。因为这避免了之后你找不到这条笔记，同时你也不知道这处于什么章节，因为你只会记得有本书中提到过，但我却可以更加具体的指出章节名，甚至是页码。这就把那种随文而写的笔记拆解出来了，同时又能找对应的内容，很像在纸书中随便写内容，但又完全是由自己掌控的。

!! 展示

不提供上下文，因为这是一个复杂的整合视图，没有必要使用上下文来呈现，如果需要上下文，则应该去点击去查看。是否支持查看内容由相应的展示方式处理。展示采用一个统一的状态条目`$:/state/cluster/chapter/display`来控制内容的显示。这样每个不同的章节所采用的显示方式也会是一样的。不开放出来完全是因为觉得如果开放出来了会很麻烦，后续有需要可以再更新

使用四种显示方式，一种是link，即只显示链接，会做成按钮样式，点击跳转。一种one-reveal，就是只能同时展示一个条目的正文，用来切换。另一种是slider-reveal，用来控制多个内容的展示。还有一种动态表格，基本和aggregation中的一样，没有太多要设置的。

* [[滑块显示2]]和[[one-reveal]] 
* 展示判断需要加上条件判断筛选器，可以给当前条目增加一个`display`字段来选择当前模板采用的默认展示模式，没有设置则默认采用link模式
* [[cluster-chapter-display-template]]，把展示模板放在这里，相当于嵌入了一个带有动态变量展示值的内容。不需要写太多重复性的代码，维护起来更方便。

* [[cluster-chapter-button]]，主要的界面放在这里
* 预估提供一个按钮，点开下面会有一排展示然后切换布局，这种方式既简便又美观。
* 按钮中的内容放在[[cluster-chapter-display-button]]
* 上面内容中用到了很多新的按钮样式，样式内容保存在[[按钮样式]]，并增加了一个特殊的reveal样式，来移除多余的空格
* 增加了一个进程函数，[[cluster-chapter-procedure]]，用来封装不同的内容
* 目前有四个参数，一个参数是后缀，一个参数是筛选器表达式，一个参数是构建输入文本的状态条目，一个参数是rootTag，可以更深入控制采用的标签
* 因为`let`微件的作用，可以很方便地传入参数，微件定义的变量可以直接在下面使用，以下是具体定义变量的含义
** `stateFilterName`，当前模板里输入框编辑的状态条目，可以增加章节后缀来进一步设置
** `stateID`生成一个前缀加当前标题构成的状态条目，用来控制`note`，`copy`，`card`和`summary`的切换
** `popupstate`，每个界面中的切换展示按钮的状态条目，不用特别设置，只需要复制即可
** `chapterText`，获取当前条目的chapter变量，一般来说是通用的
** `stateIDText`获得上面`stateID`的值，并提供一个默认值
** `rootTag`，前置筛选器，一般来说是找到某个特定的标签下，可以往前构建层级
** 其他变量不再说明了，通常是procedure进程中需要的变量，或者构建特殊筛选器选择的变量
** 变量在传递过程中经常会出现`captionText=<<captionText>>`一类的相同变量名，虽然变量名相同，但具体传递的数据是不一样的。

---

* 增加一个[[cluster-chapter-adrift]]的模板，用来放不属于任何章节的内容
* adrift：原意为 “漂流的；漂泊的”，用于抽象概念时表示某事物（如文本片段）处于无方向、无归属的状态，游离于现有的分类或体系之外。例如：“These text snippets seem adrift in the sea of information, with no clear category to belong to.”（这些文本片段在信息的海洋中似乎漂泊无依，没有明确的归属类别。）
* 增加chapter后缀是因为后续可能还有类似的
* 把不属于任何章节的copy，note，summary和card都放在这里，理论上这个集合为空是最好的。